package types

import (
	sdk "github.com/cosmos/cosmos-sdk/types"
)

type MappedAddress struct {
	Address Address `json:"address"`
}

type Address struct {
	Network string `json:"network"`
	Label   string `json:"label"`
	Value   string `json:"value"`
	Creator string `json:"creator"`
}

type NestedData struct {
	Events []NftTransferEvent `json:"events"`
}

type Data struct {
	NestedData NestedData `json:"action_nft_transfer_events"`
}

type NftTransferHistory struct {
	Data Data `json:"data"`
}

type HasuraNftMintEvent struct {
	TokenId   int64 `json:"id"`
	Timestamp int64 `json:"timestamp"`
}

type NftMintHistory struct {
	Data struct {
		History []HasuraNftMintEvent `json:"nft_transfer_history"`
	} `json:"data"`
}

type TxResult struct {
	Events []sdk.Event `json:"events"`
}

type Tx struct {
	TxResult TxResult `json:"tx_result"`
	Hash     string   `json:"hash"`
	Height   string   `json:"height"`
}

type TxQueryResponse struct {
	Result struct {
		Txs   []Tx   `json:"txs"`
		Total string `json:"total_count"`
	} `json:"result"`
}

type NftTransferEvent struct {
	DenomId   string `json:"denom_id"`
	TokenId   string `json:"token_id"`
	To        string `json:"to"`
	From      string `json:"from"`
	Timestamp int64  `json:"timestamp"`
}

// Generated by https://quicktype.io

// type NftTransferHistory struct {
// 	Data NftTransferHistoryData `json:"data"`
// }

// type NftTransferHistoryData struct {
// 	ActionNftTransferEvents NftTransferHistoryActions `json:"action_nft_transfer_events"`
// }

// type NftTransferHistoryActions struct {
// 	Events []NftTransferHistoryEvent `json:"events"`
// }

type FarmHashRate []FarmHashRateElement

type FarmHashRateElement struct {
	Time             string  `json:"time"`
	UnixTime         int64   `json:"unixTime"`
	AverageWorkers   float64 `json:"averageWorkers"`
	HashrateAccepted float64 `json:"hashrateAccepted"`
	HashrateStale    int64   `json:"hashrateStale"`
	HashrateRejected int64   `json:"hashrateRejected"`
}

type CollectionResponse struct {
	Height string           `json:"height"`
	Result CollectionResult `json:"result"`
}

type CollectionResult struct {
	Collections []Collection `json:"collections"`
}

type DenomsByDataProperty struct {
	Id       string             `json:"id"`
	DataJson DataJsonCollection `json:"data_json"`
}

type CData struct {
	DenomsByDataProperty []DenomsByDataProperty `json:"denoms_by_data_property"`
}

type CollectionData struct {
	Data CData `json:"data"`
}

type HasuraTxResult struct {
	Data struct {
		Transactions []HasuraTx `json:"transaction"`
	} `json:"data"`
}

type HasuraTx struct {
	Hash  string `json:"hash"`
	Block struct {
		Time string `json:"timestamp"`
	} `json:"block"`
}

type DataJsonCollection struct { // hasura response
	FarmId string `json:"farm_id"`
	Owner  string `json:"owner"`
}

type Blockheader struct {
	Height string `json:"height"`
	Time   string `json:"time"`
}

type Block struct {
	Header Blockheader `json:"header"`
}

type GetBlockResponse struct {
	Block Block `json:"block"`
}

type BlockSearchResponse struct {
	Result struct {
		Blocks []GetBlockResponse `json:"blocks"`
	} `json:"result"`
}
